{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let SellerService = /*#__PURE__*/(() => {\n  class SellerService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      // BehaviorSubject to track the seller's login status\n      this.isSellerLoggedIn = new BehaviorSubject(false);\n      // EventEmitter to signal login errors\n      this.isLoginError = new EventEmitter(false);\n    }\n    // Handles the seller sign-up process\n    userSignUp(data) {\n      this.http.post('http://localhost:3000/seller', data, {\n        observe: 'response'\n      }).subscribe(result => {\n        console.warn(result);\n        if (result) {\n          // Store seller data in local storage\n          localStorage.setItem('seller', JSON.stringify(result.body));\n          // Set the seller's login status to true\n          this.isSellerLoggedIn.next(true);\n          // Navigate to the seller's home page\n          this.router.navigate(['seller-home']);\n        }\n      });\n    }\n    // Checks if a seller is already logged in and updates the login status\n    reloadSeller() {\n      if (localStorage.getItem('seller')) {\n        // If seller data is found in local storage, set the login status to true\n        this.isSellerLoggedIn.next(true);\n        // Navigate to the seller's home page\n        this.router.navigate(['seller-home']);\n      }\n    }\n    // Handles the seller login process\n    userLogin(data) {\n      console.warn(data);\n      this.http.get(`http://localhost:3000/seller?email=${data.email}&password=${data.password}`, {\n        observe: 'response'\n      }).subscribe(result => {\n        console.warn(result);\n        if (result && result.body && result.body.length) {\n          // If a valid seller is found, set the login status to true\n          this.isSellerLoggedIn.next(true);\n          // Store seller data in local storage\n          localStorage.setItem('seller', JSON.stringify(result.body));\n          // Navigate to the seller's home page\n          this.router.navigate(['seller-home']);\n        } else {\n          // If login fails, emit an error event\n          this.isLoginError.emit(true);\n        }\n      });\n    }\n    static #_ = this.ɵfac = function SellerService_Factory(t) {\n      return new (t || SellerService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: SellerService,\n      factory: SellerService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return SellerService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}